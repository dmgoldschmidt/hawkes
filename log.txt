Sun 06 Feb 2022 11:18:24 AM PST
Ok, I'm restarting logging, which I should have been doing all along,
but whatever.

I've just finished getting hawkes.jl into some sort of
shape with simulated data, and I'm now doing mods to read Cindy
wsa data.  This involves building flowsets, so I'm writing "get_flowsets.jl".
It will read a raw wsa file and scan it for "triggers" which are enips talking
to rare webips.  I have a file of rare webips, which I convert to a julia
dictionary: "rare_webips.jld2" if that doesn't exist already, or load it
if it does exist. For each raw wsa record, I read the enip and check a dictionary fts_flowsets = Dict{String,Flowset} keyed on enip to see if enip in flowsets. If it's not in fts_flowsets, and the corresponding wbip is rare, I start a new
Flowset and dictionary entry.  Flowset is a struct which has members
(enip, start_time, and data = Array{HawkesPoint}).  For now, HawkesPoint
is a struct with members (time, wbip).  Later I might add more stuff.
So if the enip just read is in fts_flowsets, I check to see if the current
time is < start_time + 240.  If it is, I push a new HawkesPoint to data.
Otherwise, I ignore it and continue reading the raw wsa file.

Wed 09 Feb 2022 04:09:04 PM PST
I have get_fts_flowsets.jl running, but I realize that the name is inappropriate, and a better name is get_fts_time_series.  I've changed that and struct Flowset is now struct TimeSeries.  One reason for the change is that there are
often multiple wsa records with the same time stamp.  This doesn't work very well for the Hawkes process logic, so I've also made get_fts_time_series.jl
check for repeated time stamps, and if it sees one, I don't create a new
event in the time series, I just add the wbip to the existing HawkesPoint.mark, which I've changed to an String[].  I've also modified Hawkes.jl to load
and use the dictionary "fts_time_series.jld2" keyed on enip, so it now has
an outer loop on the key.  I added a few extra command line parameters
to deal with this. In Hawkes.jl, I now check to see if the first event occurs
at the start_time of the series, and if it does, I decrement the start time
by the average interval between successive events in the series.

Mon 14 Feb 2022 09:03:37 AM PST
OK, I've made some cosmetic changes:  "flowset" -> "time_series", and
"data" -> "events" are the big two.  So it's now get_fts_time_series, and
it looks like it's working.  I modified hawkes.jl to work with the new input,
which is a .jld2 dictionary keyed on enip, and I added an option to output
a .plt file for input to gnuplot.  I should probably be using the julia Plot
package, but I think I'll put that off for now.  

Mon 14 Feb 2022 09:16:51 AM PST
I'm now back on the master branch, after a long journey through various
attempts to get hawkes.jl to work:

1. The states are no longer just the child processes.  State 1 remains the
base process.  For s >= 2, state s at time t is now basically a pointer to the
child process which was born at time t-s+1.  This allows me to use a small
fixed number of states.  I'm currently using 10, which means that a child
process is ignored after 9 subsequent events have occurred. 

2. I finally gave up trying to solve for rho using EM.  It looked like EM
wanted rho to be zero.  So I just set it to a constant, by making the half-life
of sigma be the average delta between successive events. Combined with
1) above, this effectively sets the intensity to zero after it has decayed
by a factor of 2^{-10} on average.

3. I also changed the algorithm for solving for sigma.  I now re-estimate
a value of sigma for each child process using the omega1 matrix directly.
Namely, let $\eta_{t,j}$ be a binary random variable which is 1 if the arrival
at time t was generated by process j, and 0 otherwise, then the expected
posterior number of arrivals at time t from process j is
$\omega[t,t-j+1]$ and the total expected number of events from process j is
$k_j = \sum_{t = j+1}^{j+n-1}\omega[t,t-j+1]$ where $n$ is the number
of states.  Then we solve the equation
$k_j = \frac{\sigma_j}{\rho}(1-\exp(-rho(t_{j+n-1}-t_{j+1})$
for sigma_j.

Wed 02 Mar 2022 05:15:56 PM PST
So it looks as if Hawkes.jl is running and producing reasonable results.
But in it's present form, I don't see how to use it in cyber hunting.  One problem is that the sigmas which I output are very specific to the time series data.  I
think that's because the value of rho is set by the average "tick size", so we
can't compare different data sets to see if they are "similar' or "different.  I think
I'll try solving for and using an average value of sigma/rho, which is basically
just the expected total number of arrivals from the child process generated by
the arrival at time t.  Another idea is to build a second probability model
from the time series of sigmas.  Seems a bit far-fetched.

Fri 04 Mar 2022 04:33:36 PM PST
OK, there's something weird going on with the reestimation of the sigmas.
I commented out the division by 1-e^{-rho*delta_t} and got funny looking
sigmas.

